{"version":3,"sources":["App/components/api/api.js","App/components/redux/actions/actionTypes.js","App/components/redux/thunk/weatherThunk.js","App/components/redux/actions/weatherActions.js","App/components/HeaderBlock/HeaderBlock.jsx","App/components/HeaderBlock/index.js","App/components/WeatherCard/index.js","App/components/WeatherCard/WeatherCard.jsx","App/components/BackGround/BackGround.jsx","App/components/BackGround/index.js","App/App.js","App/components/redux/reducers/weatherReducer.js","App/components/redux/reducers/cityReducer.js","App/components/redux/reducers/index.js","App/components/redux/store.js","index.js"],"names":["API_KEY","GET_WEATHER","REQUEST_WEATHER","DELETE_CARD_WEATHER","UPDATE_CARD_WEATHER","CHOOSE_CITY","renderWeather","itemsWeather","parseItemsWeather","key","localStorage","hasOwnProperty","push","getItem","map","item","JSON","parse","dispatch","type","payload","weatherRequest","value","setItem","data","name","stringify","deleteWeather","removeItem","deleteCardWeather","updateWeather","axios","get","then","res","HeaderBlock","Option","Select","useState","city","setCity","country","setCountry","inputValue","setInputValue","inputValueLength","setInputValueLength","selectedCity","setSelectedCity","hideMenu","setHideMenu","hidePopup","setHidePopup","useDispatch","useEffect","setTimeout","Object","keys","handleCnangeInput","event","length","className","allowClear","showSearch","placeholder","style","width","onChange","sort","slice","index","onSearch","onSelect","open","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","CloseOutlined","onClick","rel","href","target","GithubOutlined","MailOutlined","LinkedinOutlined","WeatherCard","nameCity","windPowerCity","temperatureCity","humidityCity","degWindCity","pressureCity","timeStamp","cityId","console","log","angle","ArrowUpOutlined","transform","Math","round","milliseconds","d","Date","yyyy","getFullYear","mm","getMonth","dd","getDate","hh","getHours","h","ampm","getMinutes","convertTimestamp","danger","BackGround","Content","Layout","App","useSelector","weathers","main","temp","humidity","wind","speed","deg","pressure","id","dt","initialState","error","loading","cities","rootRedicer","combineReducers","state","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6758852e.chunk.js","sourcesContent":["export const API_KEY = \"30559f467fe5f65d8cd7fe8ebbf07b8a\";","export const GET_WEATHER = \"GET_WEATHER\";\r\nexport const REQUEST_WEATHER = \"REQUEST_WEATHER\";\r\nexport const DELETE_CARD_WEATHER = \"DELETE_CARD_WEATHER\";\r\nexport const UPDATE_CARD_WEATHER = \"UPDATE_CARD_WEATHER\";\r\n\r\nexport const CHOOSE_CITY = \"CHOOSE_CITY\";\r\n","import {\r\n  getWeather,\r\n  deleteCardWeather,\r\n  getWeatherRequest,\r\n  updateCardWeather,\r\n} from \"../actions/weatherActions\";\r\nimport { API_KEY } from \"../../api/api\";\r\nimport axios from \"axios\";\r\nexport const renderWeather = () => {\r\n  const itemsWeather = [];\r\n  let parseItemsWeather = [];\r\n  for (let key in localStorage) {\r\n    if (!localStorage.hasOwnProperty(key)) {\r\n      continue;\r\n    }\r\n    itemsWeather.push(localStorage.getItem(key));\r\n    parseItemsWeather = itemsWeather.map((item) => JSON.parse(item));\r\n  }\r\n  return (dispatch) => {\r\n    dispatch(getWeather(parseItemsWeather));\r\n  };\r\n};\r\n\r\nexport const weatherRequest = (value) => {\r\n  return (dispatch) => {\r\n    localStorage.setItem(value.data?.name, JSON.stringify(value));\r\n    dispatch(getWeatherRequest(value));\r\n  };\r\n};\r\n\r\nexport const deleteWeather = (name) => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem(name);\r\n    dispatch(deleteCardWeather(name));\r\n  };\r\n};\r\n\r\nexport const updateWeather = (name) => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem(name);\r\n    axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${name}&appid=${API_KEY}&units=metric`\r\n      )\r\n      .then((res) => dispatch(updateCardWeather(res)))\r\n      .then((res) => localStorage.setItem(name, JSON.stringify(res.payload)));\r\n  };\r\n};\r\n","import { GET_WEATHER, DELETE_CARD_WEATHER, REQUEST_WEATHER, UPDATE_CARD_WEATHER } from '../actions/actionTypes';\r\n\r\n\r\nexport const getWeather = (data) => {\r\n  return {\r\n    type: GET_WEATHER,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getWeatherRequest = (data) => {\r\n  return {\r\n    type: REQUEST_WEATHER,\r\n    payload: data,\r\n  };\r\n};\r\n\r\n\r\nexport const deleteCardWeather = (name) => {\r\n  return {\r\n    type: DELETE_CARD_WEATHER,\r\n    payload: name,\r\n  };\r\n}\r\n\r\nexport const updateCardWeather = (data) => {\r\n  return {\r\n    type: UPDATE_CARD_WEATHER,\r\n    payload: data,\r\n  }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Select, Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CloseOutlined,\r\n  GithubOutlined,\r\n  MailOutlined,\r\n  LinkedinOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { API_KEY } from \"../api/api\";\r\nimport { weatherRequest } from \"../redux/thunk/weatherThunk\";\r\nimport { useDispatch } from \"react-redux\";\r\nfunction HeaderBlock() {\r\n  const { Option } = Select;\r\n  const [city, setCity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [inputValue, setInputValue] = useState(\"Выберите Страну и введите Город\");\r\n  const [inputValueLength, setInputValueLength] = useState(0)\r\n  const [selectedCity, setSelectedCity] = useState(\"\");\r\n  const [hideMenu, setHideMenu] = useState(false);\r\n  const [hidePopup, setHidePopup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (hidePopup) {\r\n      setTimeout(() => setHidePopup(false), 2000);\r\n    }\r\n  }, [hidePopup]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://raw.githubusercontent.com/David-Haim/CountriesToCitiesJSON/master/countriesToCities.json\"\r\n      )\r\n      .then((res) => setCountry(Object.keys(res.data)));\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (selectedCity) {\r\n      localStorage.getItem(selectedCity)\r\n        ? setHidePopup(!hidePopup) && setSelectedCity(\"\") && setInputValue(null) && setInputValueLength(0)\r\n        : axios\r\n            .get(\r\n              `https://api.openweathermap.org/data/2.5/weather?q=${selectedCity}&appid=${API_KEY}&units=metric`\r\n            )\r\n            .then((res) => dispatch(weatherRequest(res)));\r\n      setSelectedCity(\"\");\r\n      setInputValue('Введите новый город');\r\n      setInputValueLength(0)\r\n    }\r\n  }, [selectedCity]);\r\n\r\n  function getCity(value) {\r\n    axios\r\n      .get(\r\n        \"https://raw.githubusercontent.com/David-Haim/CountriesToCitiesJSON/master/countriesToCities.json\"\r\n      )\r\n      .then((res) => setCity(res.data[value]));\r\n  }\r\n  const handleCnangeInput = (event) => {\r\n    setInputValueLength(event?.length)\r\n    setInputValue(event);\r\n    if (setCountry && inputValueLength >= 2) {\r\n      return setHideMenu(true);\r\n    } else {\r\n      return setHideMenu(false);\r\n    }\r\n  };\r\n  const onHandleLocation = (name) => {\r\n    setHideMenu(false);\r\n    setSelectedCity(name);\r\n    setInputValueLength(0)\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"find-wrapper\">\r\n        <Select\r\n          allowClear={true}\r\n          showSearch\r\n          className=\"selectCountry\"\r\n          placeholder=\"Выберите Страну\"\r\n          style={{ width: 120 }}\r\n          onChange={getCity}\r\n        >\r\n          {country\r\n            ? country.sort().slice(1).map((item, index) => {\r\n                return (\r\n                  <Option key={index} value={item}>\r\n                    {item}\r\n                  </Option>\r\n                );\r\n              })\r\n            : null}\r\n        </Select>\r\n        <Select\r\n          onChange={handleCnangeInput}\r\n          showSearch\r\n          onSearch={(event) => handleCnangeInput(event)}\r\n          allowClear={true}\r\n          onSelect={onHandleLocation}\r\n          open={hideMenu}\r\n          value={inputValue}\r\n          style={{ width: 200 }}\r\n          optionFilterProp=\"children\"\r\n          filterOption={(input, option) =>\r\n            option.children?.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n          filterSort={(optionA, optionB) =>\r\n            optionA.children\r\n              .toLowerCase()\r\n              .localeCompare(optionB.children.toLowerCase())\r\n          }\r\n        >\r\n          {city\r\n            ? city.map((item, index) => {\r\n                return (\r\n                  <Option key={index} value={item}>\r\n                    {item}\r\n                  </Option>\r\n                );\r\n              })\r\n            : null}\r\n        </Select>\r\n        {/* <Button >Очистить</Button> */}\r\n      </div>\r\n      <div className=\"popup-wrapper\">\r\n        {hidePopup && (\r\n          <p className=\"popup-block\">\r\n            Интересующая вас локация уже отображена :::)\r\n            <Button className=\"hide-popup-btn\">\r\n              <CloseOutlined\r\n                className=\"hide-popup-btn-icon\"\r\n                onClick={() => setHidePopup(!hidePopup)}\r\n              />\r\n            </Button>\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div className=\"link-group\">\r\n        <ul>\r\n          <li>\r\n            <a\r\n              rel=\"noreferrer\"\r\n              href=\"https://github.com/kilchevskii\"\r\n              target=\"_blank\"\r\n            >\r\n              <GithubOutlined />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a rel=\"noreferrer\" href=\"https://t.me/westsmokes\" target=\"_blank\">\r\n              <MailOutlined />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              rel=\"noreferrer\"\r\n              href=\"https://www.linkedin.com/in/westsmokes/\"\r\n              target=\"_blank\"\r\n            >\r\n              <LinkedinOutlined />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HeaderBlock;\r\n","import HeaderBlock from \"./HeaderBlock\";\r\n\r\n\r\nexport default HeaderBlock;\r\n","import WeatherCard from \"./WeatherCard\";\r\n\r\n\r\nexport default WeatherCard;\r\n","import { Button } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { deleteWeather, updateWeather } from \"../redux/thunk/weatherThunk\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ArrowUpOutlined } from \"@ant-design/icons\";\r\nconst WeatherCard = ({\r\n  nameCity,\r\n  windPowerCity,\r\n  temperatureCity,\r\n  humidityCity,\r\n  degWindCity,\r\n  pressureCity,\r\n  cityId,\r\n  timeStamp,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const updateWeatherCard = () => {\r\n    dispatch(updateWeather(nameCity));\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(`demontage ${nameCity}`);\r\n    };\r\n  }, []);\r\n  const deleteWeatherCard = () => {\r\n    dispatch(deleteWeather(nameCity));\r\n  };\r\n  function getDirection(angle) {\r\n    var directions = [360, 315, 270, 225, 180, 135, 90, 45];\r\n    return directions[\r\n      Math.round(((angle %= 360) < 0 ? angle + 360 : angle) / 45) % 8\r\n    ];\r\n  }\r\n  function convertTimestamp(milliseconds) {\r\n    var d = new Date(milliseconds * 1000),\r\n      yyyy = d.getFullYear(),\r\n      mm = (\"0\" + (d.getMonth() + 1)).slice(-2),\r\n      dd = (\"0\" + d.getDate()).slice(-2),\r\n      hh = d.getHours(),\r\n      h = hh,\r\n      min = (\"0\" + d.getMinutes()).slice(-2),\r\n      ampm = \"AM\",\r\n      time;\r\n    if (hh > 12) {\r\n      h = hh - 12;\r\n      ampm = \"PM\";\r\n    } else if (hh === 12) {\r\n      h = 12;\r\n      ampm = \"PM\";\r\n    } else if (hh === 0) {\r\n      h = 12;\r\n    }\r\n    time = yyyy + \"-\" + mm + \"-\" + dd + \", \" + h + \":\" + min + \" \" + ampm;\r\n    return time;\r\n  }\r\n  return (\r\n    <div className=\"wrapper-card\">\r\n      <p className=\"card-list\">Город <span className=\"cityName\">{nameCity}</span></p>\r\n      <p className=\"card-list\">Температура {temperatureCity}°</p>\r\n      <p className=\"card-list\">Влажность {humidityCity}%</p>\r\n      <p className=\"card-list\">Давление {pressureCity}</p>\r\n      <p className=\"card-list\">\r\n        Сила ветра {windPowerCity} и направление ветра <br />\r\n          <ArrowUpOutlined  className=\"arrow-wind\" style={{transform: `rotate(${getDirection(degWindCity)}deg)`}}/>\r\n      </p>\r\n      <p className=\"card-list\">\r\n        Последнее обновление данных\r\n        <br /> {convertTimestamp(timeStamp)}\r\n      </p>\r\n      <div className=\"control-btns\">\r\n        <Button onClick={deleteWeatherCard} type=\"primary\" danger>\r\n          Удалить\r\n        </Button>\r\n        <Button onClick={updateWeatherCard} className=\"update-btn\">\r\n          Обновить\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nfunction BackGround() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Welcome</h1>\r\n\r\n      <div className=\"bird-container bird-container--one\">\r\n        <div className=\"bird bird--one\"></div>\r\n      </div>\r\n\r\n      <div className=\"bird-container bird-container--two\">\r\n        <div className=\"bird bird--two\"></div>\r\n      </div>\r\n\r\n      <div className=\"bird-container bird-container--three\">\r\n        <div className=\"bird bird--three\"></div>\r\n      </div>\r\n\r\n      <div className=\"bird-container bird-container--four\">\r\n        <div className=\"bird bird--four\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackGround;\r\n","import BackGround from \"./BackGround\";\r\n\r\n\r\nexport default BackGround;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Layout, PageHeader } from \"antd\";\r\nimport HeaderBlock from \"./components/HeaderBlock\";\r\nimport WeatherCard from \"./components/WeatherCard\";\r\nimport {\r\n  renderWeather,\r\n} from \"./components/redux/thunk/weatherThunk\";\r\nimport BackGround from \"./components/BackGround\";\r\nconst { Content } = Layout;\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const { data } = useSelector(({ weathers }) => weathers);\r\n  useEffect(() => {\r\n    dispatch(renderWeather());\r\n    console.log('renderWeather');\r\n  }, [dispatch]);\r\n  return (\r\n    <Content>\r\n      <PageHeader>\r\n        <div className=\"search-block\">\r\n          <HeaderBlock />\r\n        </div>\r\n      </PageHeader>\r\n      <div className=\"weather-block\">\r\n        {data.length > 0 ? (\r\n          data?.map((item, index) => (\r\n            <WeatherCard\r\n              key={index}\r\n              nameCity={item?.data?.name}\r\n              temperatureCity={item?.data?.main?.temp}\r\n              humidityCity={item?.data?.main?.humidity}\r\n              windPowerCity={item?.data?.wind?.speed}\r\n              degWindCity={item?.data?.wind?.deg}\r\n              pressureCity={item?.data?.main?.pressure}\r\n              cityId={item?.data?.id}\r\n              timeStamp={item?.data?.dt}\r\n            />\r\n          ))\r\n        ) : (\r\n          <BackGround />\r\n        )}\r\n      </div>\r\n    </Content>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  GET_WEATHER,\r\n  DELETE_CARD_WEATHER,\r\n  REQUEST_WEATHER,\r\n  UPDATE_CARD_WEATHER,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  error: null,\r\n  loading: true,\r\n};\r\n\r\nexport default function weatherReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_WEATHER:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case REQUEST_WEATHER:\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload],\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case DELETE_CARD_WEATHER:\r\n      const name = action.payload;\r\n      return {\r\n        ...state,\r\n        data: state.data.filter((item) => item.data.name !== name),\r\n        error: null,\r\n        loading: true,\r\n      };\r\n    case UPDATE_CARD_WEATHER:\r\n      return {\r\n        ...state,\r\n        data: state.data.map(\r\n          (item) => {\r\n            return item.data.name === action.payload.data.name ? action.payload : item;\r\n          }\r\n        ),\r\n        error: null,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// import { sortName } from '../../components/Helpers/helpers';\r\nimport { CHOOSE_CITY } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  cities: [],\r\n  error: null,\r\n  loading: true,\r\n};\r\n\r\nexport default function cityReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHOOSE_CITY:\r\n      return {\r\n        ...state,\r\n        cities: [...state.cities, action.payload],\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport weatherReducer from './weatherReducer';\r\nimport cityReducer from './cityReducer';\r\nconst rootRedicer = combineReducers({ weathers: weatherReducer, cities: cityReducer });\r\n\r\nexport default rootRedicer;","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootRedicer from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootRedicer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport { store } from \"./App/components/redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}